# ~/.bashrc: executed by bash(1) for non-login shells.
# See /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='\[\033[01;32m\]\#) \D{%F %T} \h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]> '
else
    PS1='\#) \D{%F %T} \h:\w> '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

export MY_GIT_SERVER="git@gitlab.com:hazevt04"

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [ -f /opt/ros/melodic/setup.bash ]; then
   . /opt/ros/melodic/setup.bash
fi

if [ -f ~/catkin_ws/devel/setup.bash ]; then
   . ~/catkin_ws/devel/setup.bash
fi

export PATH=/usr/local/cuda/bin:$PATH

export PATH=/home/ghazelwood/.cargo/bin:$PATH

# Add libre office to my path
export PATH=/usr/lib/libreoffice/program/:$PATH



export MANPATH=/usr/share/man:$MANPATH

export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/usr/local/lib/openblas:$LD_LIBRARY_PATH

export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH

export PYTHONPATH=/usr/local/lib/python3/dist-packages:$PYTHONPATH
export PYTHONPATH=/usr/local/lib/python3.6/dist-packages:$PYTHONPATH


export CUDAHOME=/usr/local/cuda
export CUDA_HOME=/usr/local/cuda

export CUB_DIR=/home/${USER}/cub-1.8.0


export CUDA_API_WRAPPERS_LIBRARY_DIR=/usr/local/lib
export CUDA_API_WRAPPERS_INCLUDE_DIR=/usr/local/include/cuda

#cd ${HOME}/ULTIMATHULE/USRP/CUDA
#cd ${HOME}/Sandbox/C++/usrp
#cd ${HOME}/Sandbox/Python/fspec_cuda_python_ext/cython

# Shut up the annoying GTK messages!!
# See https://unix.stackexchange.com/questions/230238/x-applications-warn-couldnt-connect-to-accessibility-bus-on-stderr 
# The accessibility warning is a known bug with an easy workaround if you don't use any accessibility feature:
export NO_AT_BRIDGE=1

export CMAKE_MODULE_PATH=/usr/share/cmake-3.10/Modules

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi
